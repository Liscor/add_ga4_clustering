
{
    "message": {
      "attributes": {
        "greeting": "Hello from the Cloud Pub/Sub Emulator!"
      },
      "data": "",
      "messageId": "136969346945"
    },
    "subscription": "projects/myproject/subscriptions/mysubscription"
  }